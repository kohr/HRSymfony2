<?php

namespace Mr\StartBundle\Entity;

use Doctrine\ORM\Mapping as ORM;

/**
 * Mr\StartBundle\Entity\MrDiploma
 *
 * TODO :  loggable to follow evolution of the name and the type
 *
 * @ORM\Table(name="mr_diploma")
 * @ORM\Entity
 */
class MrDiploma
{

    const NODE_TYE = 'Diploma';

    public function next()
    {
      $explorer = new MrGraphExplorer($this);
      return $explorer->next();
    }
    public function prev()
    {
      $explorer = new MrGraphExplorer($this);
      return $explorer->prev();
    }
    public function build($direction)
    {
      $builder = new MrGraphBuilder($this);
      return $builder->$direction();
    }




    // autogenerated


    /**
     * @var integer $id
     *
     * @ORM\Column(name="id", type="integer", nullable=false)
     * @ORM\Id
     * @ORM\GeneratedValue(strategy="IDENTITY")
     */
    private $id;

    /**
     * @var string $name
     *
     * @ORM\Column(name="name", type="string", length=250, nullable=false)
     */
    private $name;

    /**
     * @var Mr\StartBundle\Entity\MrDiplomaType
     */
    private $type;

    /**
     * @var Mr\StartBundle\Entity\MrArea
     */
    private $areas;

    /**
     * @var string $slug
     */
    private $slug;

    /**
     * @var date $created_at
     */
    private $created_at;

    /**
     * @var datetime $updated_at
     */
    private $updated_at;


    public function __construct()
    {
        $this->areas = new \Doctrine\Common\Collections\ArrayCollection();
    }

    public function __toString()
    {
        return $this->name;
    }

    /**
     * Get id
     *
     * @return integer $id
     */
    public function getId()
    {
        return $this->id;
    }

    /**
     * Set name
     *
     * @param string $name
     */
    public function setName($name)
    {
        $this->name = $name;
    }

    /**
     * Get name
     *
     * @return string $name
     */
    public function getName()
    {
        return $this->name;
    }

    /**
     * Set type
     *
     * @param Mr\StartBundle\Entity\MrDiplomaType $type
     */
    public function setType(\Mr\StartBundle\Entity\MrDiplomaType $type)
    {
        $this->type = $type;
    }

    /**
     * Get type
     *
     * @return Mr\StartBundle\Entity\MrDiplomaType $type
     */
    public function getType()
    {
        return $this->type;
    }

    /**
     * Add areas
     *
     * @param Mr\StartBundle\Entity\MrArea $areas
     */
    public function addAreas(\Mr\StartBundle\Entity\MrArea $areas)
    {
        $this->areas[] = $areas;
    }

    /**
     * Get areas
     *
     * @return Doctrine\Common\Collections\Collection $areas
     */
    public function getAreas()
    {
        return $this->areas;
    }

    /**
     * Set slug
     *
     * @param string $slug
     */
    public function setSlug($slug)
    {
        $this->slug = $slug;
    }

    /**
     * Get slug
     *
     * @return string $slug
     */
    public function getSlug()
    {
        return $this->slug;
    }

    /**
     * Set created_at
     *
     * @param date $createdAt
     */
    public function setCreatedAt($createdAt)
    {
        $this->created_at = $createdAt;
    }

    /**
     * Get created_at
     *
     * @return date $createdAt
     */
    public function getCreatedAt()
    {
        return $this->created_at;
    }

    /**
     * Set updated_at
     *
     * @param datetime $updatedAt
     */
    public function setUpdatedAt($updatedAt)
    {
        $this->updated_at = $updatedAt;
    }

    /**
     * Get updated_at
     *
     * @return datetime $updatedAt
     */
    public function getUpdatedAt()
    {
        return $this->updated_at;
    }
    /**
     * @var text $twitterhash
     */
    private $twitterhash;


    /**
     * Set twitterhash
     *
     * @param text $twitterhash
     */
    public function setTwitterhash($twitterhash)
    {
        $this->twitterhash = $twitterhash;
    }

    /**
     * Get twitterhash
     *
     * @return text $twitterhash
     */
    public function getTwitterhash()
    {
        return $this->twitterhash;
    }
}