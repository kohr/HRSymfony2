<?php

namespace Proxies;

/**
 * THIS CLASS WAS GENERATED BY THE DOCTRINE ORM. DO NOT EDIT THIS FILE.
 */
class MrStartBundleEntityMrToPartnerProxy extends \Mr\StartBundle\Entity\MrToPartner implements \Doctrine\ORM\Proxy\Proxy
{
    private $_entityPersister;
    private $_identifier;
    public $__isInitialized__ = false;
    public function __construct($entityPersister, $identifier)
    {
        $this->_entityPersister = $entityPersister;
        $this->_identifier = $identifier;
    }
    /** @private */
    public function __load()
    {
        if (!$this->__isInitialized__ && $this->_entityPersister) {
            $this->__isInitialized__ = true;
            if ($this->_entityPersister->load($this->_identifier, $this) === null) {
                throw new \Doctrine\ORM\EntityNotFoundException();
            }
            unset($this->_entityPersister, $this->_identifier);
        }
    }
    
    
    public function getId()
    {
        $this->__load();
        return parent::getId();
    }

    public function setMrObjectId($mrObjectId)
    {
        $this->__load();
        return parent::setMrObjectId($mrObjectId);
    }

    public function getMrObjectId()
    {
        $this->__load();
        return parent::getMrObjectId();
    }

    public function setMrObjectName($mrObjectName)
    {
        $this->__load();
        return parent::setMrObjectName($mrObjectName);
    }

    public function getMrObjectName()
    {
        $this->__load();
        return parent::getMrObjectName();
    }

    public function setPartnerId($partnerId)
    {
        $this->__load();
        return parent::setPartnerId($partnerId);
    }

    public function getPartnerId()
    {
        $this->__load();
        return parent::getPartnerId();
    }

    public function setPartnerObjectId($partnerObjectId)
    {
        $this->__load();
        return parent::setPartnerObjectId($partnerObjectId);
    }

    public function getPartnerObjectId()
    {
        $this->__load();
        return parent::getPartnerObjectId();
    }

    public function setCreatedAt($createdAt)
    {
        $this->__load();
        return parent::setCreatedAt($createdAt);
    }

    public function getCreatedAt()
    {
        $this->__load();
        return parent::getCreatedAt();
    }

    public function setUpdatedAt($updatedAt)
    {
        $this->__load();
        return parent::setUpdatedAt($updatedAt);
    }

    public function getUpdatedAt()
    {
        $this->__load();
        return parent::getUpdatedAt();
    }

    public function setLocation(\Mr\StartBundle\Entity\MrPartner $location)
    {
        $this->__load();
        return parent::setLocation($location);
    }

    public function getLocation()
    {
        $this->__load();
        return parent::getLocation();
    }


    public function __sleep()
    {
        return array('__isInitialized__', 'id', 'mr_object_id', 'mr_object_name', 'partner_id', 'partner_object_id', 'created_at', 'updated_at', 'location');
    }

    public function __clone()
    {
        if (!$this->__isInitialized__ && $this->_entityPersister) {
            $this->__isInitialized__ = true;
            $class = $this->_entityPersister->getClassMetadata();
            $original = $this->_entityPersister->load($this->_identifier);
            if ($original === null) {
                throw new \Doctrine\ORM\EntityNotFoundException();
            }
            foreach ($class->reflFields AS $field => $reflProperty) {
                $reflProperty->setValue($this, $reflProperty->getValue($original));
            }
            unset($this->_entityPersister, $this->_identifier);
        }
        
    }
}